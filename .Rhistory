res <- rbind(res, temp)
}
#mean(dat_subset, na.rm=TRUE)
#median(dat_subset[, "sulfate"], na.rm=TRUE)      #identifies the median weight
#names(res) <- c("id", "nobs")
t <- subset(res, res[2]>=threshold)
t
#dat_subset <- subset(dat, dat$ID in t & complete.cases(dat)==TRUE )
}
complete("specdata", 3)
corr <- function(directory, threshold = 0)
{
files_list <- list.files(directory, full.names=TRUE)   #creates a list of files
dat <- data.frame()
res <- data.frame()
temp <- data.frame()#creates an empty data frame
for (i in 1:2) {
#loops through the files, rbinding them together
dat <- rbind(dat, read.csv(files_list[i]))
}
#dat_subset <- subset(dat, dat$ID >= min(id) & dat$ID <= max(id) & complete.cases(dat)==TRUE )
for (j in id) {
#loops through the files, rbinding them together
dat_subset <- subset(dat, dat$ID==j & complete.cases(dat)==TRUE )
temp <- c(j, length(dat_subset$ID))
res <- rbind(res, temp)
}
#mean(dat_subset, na.rm=TRUE)
#median(dat_subset[, "sulfate"], na.rm=TRUE)      #identifies the median weight
#names(res) <- c("id", "nobs")
t <- subset(res, res[2]>=threshold)
t
#dat_subset <- subset(dat, dat$ID in t & complete.cases(dat)==TRUE )
}
corr("specdata", 100)
corr <- function(directory, threshold = 0)
{
files_list <- list.files(directory, full.names=TRUE)   #creates a list of files
dat <- data.frame()
res <- data.frame()
temp <- data.frame()#creates an empty data frame
for (i in 1:2) {
#loops through the files, rbinding them together
dat <- rbind(dat, read.csv(files_list[i]))
}
#dat_subset <- subset(dat, dat$ID >= min(id) & dat$ID <= max(id) & complete.cases(dat)==TRUE )
for (j in 1:332) {
#loops through the files, rbinding them together
dat_subset <- subset(dat, dat$ID==j & complete.cases(dat)==TRUE )
temp <- c(j, length(dat_subset$ID))
res <- rbind(res, temp)
}
#mean(dat_subset, na.rm=TRUE)
#median(dat_subset[, "sulfate"], na.rm=TRUE)      #identifies the median weight
#names(res) <- c("id", "nobs")
t <- subset(res, res[2]>=threshold)
t
#dat_subset <- subset(dat, dat$ID in t & complete.cases(dat)==TRUE )
}
corr("specdata", 100)
corr <- function(directory, threshold = 0)
{
files_list <- list.files(directory, full.names=TRUE)   #creates a list of files
dat <- data.frame()
res <- data.frame()
temp <- data.frame()#creates an empty data frame
for (i in 1:2) {
#loops through the files, rbinding them together
dat <- rbind(dat, read.csv(files_list[i]))
}
#dat_subset <- subset(dat, dat$ID >= min(id) & dat$ID <= max(id) & complete.cases(dat)==TRUE )
for (j in 1:332) {
#loops through the files, rbinding them together
dat_subset <- subset(dat, dat$ID==j & complete.cases(dat)==TRUE )
temp <- c(j, length(dat_subset$ID))
res <- rbind(res, temp)
}
#mean(dat_subset, na.rm=TRUE)
#median(dat_subset[, "sulfate"], na.rm=TRUE)      #identifies the median weight
#names(res) <- c("id", "nobs")
t <- subset(res, res[2]>=threshold)
res
t
#dat_subset <- subset(dat, dat$ID in t & complete.cases(dat)==TRUE )
}
corr("specdata", 1000)
corr <- function(directory, threshold = 0)
{
files_list <- list.files(directory, full.names=TRUE)   #creates a list of files
dat <- data.frame()
res <- data.frame()
temp <- data.frame()#creates an empty data frame
for (i in 1:2) {
#loops through the files, rbinding them together
dat <- rbind(dat, read.csv(files_list[i]))
}
#dat_subset <- subset(dat, dat$ID >= min(id) & dat$ID <= max(id) & complete.cases(dat)==TRUE )
for (j in 1:332) {
#loops through the files, rbinding them together
dat_subset <- subset(dat, dat$ID==j & complete.cases(dat)==TRUE )
temp <- c(j, length(dat_subset$ID))
res <- rbind(res, temp)
}
#mean(dat_subset, na.rm=TRUE)
#median(dat_subset[, "sulfate"], na.rm=TRUE)      #identifies the median weight
#names(res) <- c("id", "nobs")
t <- subset(res$1, res[2]>=threshold, drop=1)
res
t
#dat_subset <- subset(dat, dat$ID in t & complete.cases(dat)==TRUE )
}
corr <- function(directory, threshold = 0)
{
files_list <- list.files(directory, full.names=TRUE)   #creates a list of files
dat <- data.frame()
res <- data.frame()
temp <- data.frame()#creates an empty data frame
for (i in 1:2) {
#loops through the files, rbinding them together
dat <- rbind(dat, read.csv(files_list[i]))
}
#dat_subset <- subset(dat, dat$ID >= min(id) & dat$ID <= max(id) & complete.cases(dat)==TRUE )
for (j in 1:332) {
#loops through the files, rbinding them together
dat_subset <- subset(dat, dat$ID==j & complete.cases(dat)==TRUE )
temp <- c(j, length(dat_subset$ID))
res <- rbind(res, temp)
}
#mean(dat_subset, na.rm=TRUE)
#median(dat_subset[, "sulfate"], na.rm=TRUE)      #identifies the median weight
#names(res) <- c("id", "nobs")
t <- subset(res[1], res[2]>=threshold, drop=1)
res
t
#dat_subset <- subset(dat, dat$ID in t & complete.cases(dat)==TRUE )
}
corr("specdata", 1000)
corr <- function(directory, threshold = 0)
{
files_list <- list.files(directory, full.names=TRUE)   #creates a list of files
dat <- data.frame()
res <- data.frame()
temp <- data.frame()#creates an empty data frame
for (i in 1:2) {
#loops through the files, rbinding them together
dat <- rbind(dat, read.csv(files_list[i]))
}
#dat_subset <- subset(dat, dat$ID >= min(id) & dat$ID <= max(id) & complete.cases(dat)==TRUE )
for (j in 1:332) {
#loops through the files, rbinding them together
dat_subset <- subset(dat, dat$ID==j & complete.cases(dat)==TRUE )
temp <- c(j, length(dat_subset$ID))
res <- rbind(res, temp)
}
#mean(dat_subset, na.rm=TRUE)
#median(dat_subset[, "sulfate"], na.rm=TRUE)      #identifies the median weight
#names(res) <- c("id", "nobs")
t <- subset(res[1], res[2]>=threshold, drop=1)
res
#dat_subset <- subset(dat, dat$ID in t & complete.cases(dat)==TRUE )
}
corr("specdata", 1000)
corr <- function(directory, threshold = 0)
{
files_list <- list.files(directory, full.names=TRUE)   #creates a list of files
dat <- data.frame()
res <- data.frame()
temp <- data.frame()#creates an empty data frame
for (i in 1:2) {
#loops through the files, rbinding them together
dat <- rbind(dat, read.csv(files_list[i]))
}
#dat_subset <- subset(dat, dat$ID >= min(id) & dat$ID <= max(id) & complete.cases(dat)==TRUE )
for (j in 1:332) {
#loops through the files, rbinding them together
dat_subset <- subset(dat, dat$ID==j & complete.cases(dat)==TRUE )
temp <- c(j, length(dat_subset$ID))
res <- rbind(res, temp)
}
#mean(dat_subset, na.rm=TRUE)
#median(dat_subset[, "sulfate"], na.rm=TRUE)      #identifies the median weight
#names(res) <- c("id", "nobs")
t <- subset(res[1], res[2]>=threshold, drop=1)
test <- subset(dat, dat$ID in t)
test
#dat_subset <- subset(dat, dat$ID in t & complete.cases(dat)==TRUE )
}
corr <- function(directory, threshold = 0)
{
files_list <- list.files(directory, full.names=TRUE)   #creates a list of files
dat <- data.frame()
res <- data.frame()
temp <- data.frame()#creates an empty data frame
dat_subset2 <- data.frame()
for (i in 1:2) {
#loops through the files, rbinding them together
dat <- rbind(dat, read.csv(files_list[i]))
}
#dat_subset <- subset(dat, dat$ID >= min(id) & dat$ID <= max(id) & complete.cases(dat)==TRUE )
for (j in 1:332) {
#loops through the files, rbinding them together
dat_subset <- subset(dat, dat$ID==j & complete.cases(dat)==TRUE )
temp <- c(j, length(dat_subset$ID))
res <- rbind(res, temp)
}
#mean(dat_subset, na.rm=TRUE)
#median(dat_subset[, "sulfate"], na.rm=TRUE)      #identifies the median weight
#names(res) <- c("id", "nobs")
t <- subset(res[1], res[2]>=threshold, drop=1)
for (k in t) {
#loops through the files, rbinding them together
temp2 <- subset(dat, dat$ID==k & complete.cases(dat)==TRUE )
dat_subset2 <- rbind(dat_subset2, temp2)
}
dat_subset2
#dat_subset <- subset(dat, dat$ID in t & complete.cases(dat)==TRUE )
}
corr("specdata", 1000)
corr <- function(directory, threshold = 0)
{
files_list <- list.files(directory, full.names=TRUE)   #creates a list of files
dat <- data.frame()
res <- data.frame()
temp <- data.frame()#creates an empty data frame
dat_subset2 <- data.frame()
for (i in 1:2) {
#loops through the files, rbinding them together
dat <- rbind(dat, read.csv(files_list[i]))
}
#dat_subset <- subset(dat, dat$ID >= min(id) & dat$ID <= max(id) & complete.cases(dat)==TRUE )
for (j in 1:332) {
#loops through the files, rbinding them together
dat_subset <- subset(dat, dat$ID==j & complete.cases(dat)==TRUE )
temp <- c(j, length(dat_subset$ID))
res <- rbind(res, temp)
}
#mean(dat_subset, na.rm=TRUE)
#median(dat_subset[, "sulfate"], na.rm=TRUE)      #identifies the median weight
#names(res) <- c("id", "nobs")
t <- subset(res[1], res[2]>=threshold, drop=1)
for (k in t) {
#loops through the files, rbinding them together
temp2 <- subset(dat, dat$ID==k & complete.cases(dat)==TRUE )
dat_subset2 <- rbind(dat_subset2, temp2)
}
cor(dat_subset2$sulfate, dat_subset2$nitrate)
#dat_subset <- subset(dat, dat$ID in t & complete.cases(dat)==TRUE )
}
corr("specdata", 1000)
source("corr.R")
cr <- corr("specdata", 150)
head(cr)
?cor
corr <- function(directory, threshold = 0)
{
files_list <- list.files(directory, full.names=TRUE)   #creates a list of files
dat <- data.frame()
res <- data.frame()
temp <- data.frame()#creates an empty data frame
dat_subset2 <- data.frame()
p <- vector()
for (i in 1:332) {
#loops through the files, rbinding them together
dat <- rbind(dat, read.csv(files_list[i]))
}
#dat_subset <- subset(dat, dat$ID >= min(id) & dat$ID <= max(id) & complete.cases(dat)==TRUE )
for (j in 1:332) {
#loops through the files, rbinding them together
dat_subset <- subset(dat, dat$ID==j & complete.cases(dat)==TRUE )
temp <- c(j, length(dat_subset$ID))
res <- rbind(res, temp)
}
#mean(dat_subset, na.rm=TRUE)
#median(dat_subset[, "sulfate"], na.rm=TRUE)      #identifies the median weight
#names(res) <- c("id", "nobs")
t <- subset(res[1], res[2]>=threshold, drop=1)
for (k in t) {
#loops through the files, rbinding them together
temp2 <- subset(dat, dat$ID==k & complete.cases(dat)==TRUE )
p <- rbind(p, cor(temp2$sulfate, temp2$nitrate))
#dat_subset2 <- rbind(dat_subset2, temp2)
}
p
#cor(dat_subset2$sulfate, dat_subset2$nitrate)
#dat_subset <- subset(dat, dat$ID in t & complete.cases(dat)==TRUE )
}
cr <- corr("specdata", 150)
head(cr)
source("corr.R")
cr <- corr("specdata", 150)
source("corr.R")
cr <- corr("specdata", 150)
head(cr)
source("corr.R")
cr <- corr("specdata", 150)
head(cr)
source("corr.R")
cr <- corr("specdata", 150)
head(cr)
summary(cr)
cr <- corr("specdata", 400)
head(cr)
summary(cr)
source("corr.R")
cr <- corr("specdata", 400)
head(cr)
cr <- corr("specdata", 5000)
source("corr.R")
cr <- corr("specdata", 5000)
summary(cr)
length(cr)
source("corr.R")
submit()
source("corr.R")
cr <- corr("specdata", 500)
cr
source("corr.R")
cr <- corr("specdata", 500)
cr
summary(cr)
source("corr.R")
cr <- corr("specdata", 400)
head(cr)
head(cr)
summary(cr)
submit()
submit()
submit()
x <- 1:10
if(x > 5) {
x <- 0
}
x
if(x > 5) {
+     x <- 0
+ }
if(x > 5) x <- 0
x[1] <- 6
x
if(x > 5) x <- 0
x
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z <- 10
f(3)
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
y
makeVector <- function(x = numeric()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setmean <- function(mean) m <<- mean
getmean <- function() m
list(set = set, get = get,
setmean = setmean,
getmean = getmean)
}
cachemean <- function(x, ...) {
m <- x$getmean()
if(!is.null(m)) {
message("getting cached data")
return(m)
}
data <- x$get()
m <- mean(data, ...)
x$setmean(m)
m
}
?cachemean
cachemean(1)
cachemean(1, 2)
makeVector(1)
cachemean(1)
cachemean(1, 2)
makeVector(2)
cachemean(1, 2)
x <- rnorm(10)
x
x <- rnorm(10,1)
x
x <- rnorm(10,2)
x
x <- c(rnorm(10), runif(10), rnorn(10,1))
x <- c(rnorm(10), runif(10), rnorm(10,1))
x
library(datasets)
data(iris)
?iris
x <- subset(iris$Sepal.Length, iris$Species=="virginica")
x
x <- subset(iris$Sepal.Length, iris$Species=="virginica", na.rm=TRUE)
x
mean(x)
iris
f <- (3, 50)
f <- gl(3, 50)
tapply(iris,f,mean)
f
length(iris)
tapply(iris$Species,f,mean)
iris$Species
tapply(iris$Sepal.length,f,mean)
iris$Sepal.length
tapply(iris$Sepal.Length,f,mean)
mean(iris$Sepal.Length)
apply(iris, 2, mean)
apply(iris[, 1:4], 2, mean)
rowMeans(iris[, 1:4])
library(datasets)
data(mtcars)
?mtcars
mtcars
tapply(mtcars$mpg,mtcars$cyl, mean)
x <-tapply(mtcars$hp,mtcars$cyl, mean)
x
x[1]
x[3]-x[1]
debug(ls)
ls
makeVector <- function(x = numeric()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setmean <- function(mean) m <<- mean
getmean <- function() m
list(set = set, get = get,
setmean = setmean,
getmean = getmean)
}
library(RMySQL)library(plyr)library(stringdist)library(reshape2)library(ngramrr)library(tm)con <- dbConnect(MySQL(), dbname="services", user="seo_view", password="ijY8N092af", host="10.1.0.14")dbSendQuery(con,"set names utf8")
getwd()
setwd("/Users/arkadyitenberg/Desktop/Rfolder/Shiny")
library(shinyapps)
?shinyapps
deployApp()
deployApp()
deployApp()
deployApp()
?write.csv
deployApp()
getwd()
setwd(/Users/arkadyitenberg/Desktop/Rfolder/Shiny/ngrams)
setwd("/Users/arkadyitenberg/Desktop/Rfolder/Shiny/ngrams")
deployApp()
a <- read.delim("q.txt",as.is=TRUE, header=FALSE, sep=".")
head(a)
temp <- c()
if (ncol(Sentance)>1) {
for (i in 1:ncol(Sentance)) temp <- c(temp,as.vector(Sentance[[i]]))
Sentance <- temp
}
Sentance <- a
temp <- c()
if (ncol(Sentance)>1) {
for (i in 1:ncol(Sentance)) temp <- c(temp,as.vector(Sentance[[i]]))
Sentance <- temp
}
head(temp)
library(tm)
?Corpus
getwd()
runApp()
library(shiny)
runApp()
Corpus(a)
corpus <- tm_map(a, removePunctuation)
?corpus
?Corpus
corpus <- Corpus(DirSource(getwd())
corpus <- Corpus(DirSource(getwd()))
head(corpus)
inspect(corpus)
head(a)
c <- Corpus(VectorSource(a))
head(c)
corpus <- c
corpus <- tm_map(corpus, content_transformer(tolower))
corpus <- tm_map(corpus, removePunctuation)
corpusDTM <- TermDocumentMatrix(corpus)
head(corpusDTM)
FreqTerm <- as.data.frame(rowSums(as.matrix(corpusDTM)))
FreqTerm$words <- row.names(FreqTerm)
row.names(FreqTerm) <- NULL
colnames(FreqTerm)[1] <- 'totalFreq'
FreqTerm <- arrange(FreqTerm, desc(totalFreq))
library(plyr)
FreqTerm <- arrange(FreqTerm, desc(totalFreq))
head(FreqTerm)
head(a)
a[1]
install.packages("HTTR")
install.packages("httr")
library(httr)
?sig_oauth1.0
myapp = oauth_app("yametrika", key="b60e36688bec446e8707eef5de994bbf",secret="20bff3dfc8484e81abaf39b0a03d8a37")
sig = sig_oauth1.0
